---
import { Img, Picture } from "astro-imagetools/components";
import Authorcard from "@components/authorcard.astro";
import Container from "@components/container.astro";
import Label from "@components/ui/label.astro";
import Layout from "@layouts/Layout.astro";
import { getFormattedDate } from "@utils/all";
import PortableText from "@components/portabletext.astro";
import { latestPosts } from "@utils/content";
import type { LATEST_POSTS_QUERYResult } from "../../../sanity.types";

type Props = {
  post: LATEST_POSTS_QUERYResult[0]
};

export async function getStaticPaths() {
  const blog = await latestPosts

  return blog.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props;

const author = post.author;
const category = post.category;
---

<Layout
  title={post.title ?? ""}
  desc={post.description ?? ""}
  ogimage={post.image ?? ""}>
  <Container>
    <div class="max-w-screen-md mx-auto">
      <div class="text-center">
        <Label theme="green">{category?.title}</Label>
      </div>

      <h1
        class="mt-2 mb-3 text-3xl font-semibold tracking-tight text-center lg:leading-snug text-brand-primary lg:text-4xl dark:text-white">
        {post.title}
      </h1>

      <div class="flex justify-center mt-3 space-x-3 text-gray-500">
        <div class="flex items-center gap-3">
          <div class="relative flex-shrink-0 w-10 h-10">
            {
              author?.image && (
                <Img
                  src={author.image}
                  alt="Author Photo"
                  width={80}
                  height={80}
                  loading="eager"
                  class="rounded-full"
                />
              )
            }
          </div>

          <div>
            <p class="text-gray-800 dark:text-gray-400">
              {author?.name}
            </p>
            <div class="flex items-center space-x-2 text-sm">
              <time
                class="text-gray-500 dark:text-gray-400"
                datetime={post.publishedAt}>
                {getFormattedDate(post.publishedAt)}
              </time>
              <span>
                TO DO min
                read
              </span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </Container>

  <div
    class="relative z-0 max-w-screen-lg mx-auto overflow-hidden lg:rounded-lg aspect-video">
    {
      post.image && (
        <Picture
          src={post.image}
          widths={[200, 400, 800]}
          sizes="(max-width: 640px) 90vw, 480px"
          aspectRatio="16:9"
          width={1024}
          heignt={576}
          alt="Thumbnail"
          loading="eager"
          class="w-full"
        />
      )
    }
  </div>

  <Container>
    <article class="max-w-screen-md mx-auto">
      <div
        class="mx-auto my-3 prose prose-base dark:prose-invert prose-a:text-blue-600">
        <PortableText portableText={post.body} />

        <div class="flex flex-wrap items-center w-full gap-3 md:w-auto">
          {
            post.tags?.map((tag) => (
              <span class="text-sm text-gray-500">#{tag.title}</span>
            ))
          }
        </div>
      </div>

      <div class="flex justify-center mt-7 mb-7">
        <a
          href="/"
          class="px-5 py-3 text-sm text-blue-600 transition rounded-md dark:text-blue-500 bg-blue-50 hover:bg-blue-100">
          ‚Üê View all posts
        </a>
      </div>
      {author && <Authorcard author={author} />}
    </article>
  </Container>
</Layout>
